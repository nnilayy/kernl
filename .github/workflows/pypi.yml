name: Build and Publish to PyPI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest

    outputs:
      uploaded: ${{ steps.upload.outputs.uploaded }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel

      - name: Build package
        run: python -m build --no-isolation

      - name: Upload dist files as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel

      - name: Download built package
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
